1、Elasticsearch
    Elasticsearch 是一个分布式、可扩展、实时的搜索与数据分析引擎。
    它能从项目一开始就赋予你的数据以搜索、分析和探索的能力，可用于实现全文搜索和实时数据统计
2、Elasticsearch的安装和使用：
    1.1：下载Elasticsearch6.2.2的zip包，并解压到指定目录，（浏览器打开）
    下载地址：https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2

    1.2：安装中文分词插件，在elasticsearch-6.2.2\bin目录下执行以下命令：（bin目录下执行命令）
    elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.2.2/elasticsearch-analysis-ik-6.2.2.zip
    1.3：运行bin目录下的elasticsearch.bat启动Elasticsearch
    1.4;下载Kibana,作为访问Elasticsearch的客户端，请下载6.2.2版本的zip包，并解压到指定目录，
    下载地址：https://artifacts.elastic.co/downloads/kibana/kibana-6.2.2-windows-x86_64.zip  (复制浏览器中打开)
    1.5：运行bin目录下的kibana.bat，启动Kibana的用户界面
    1.6：访问http://localhost:5601 即可打开Kibana的用户界面 （界面有dev tools---go to work）

二、Spring Data Elasticsearch
常用注解：
    1、1：@Document
    //标示映射到Elasticsearch文档上的领域对象
    public @interface Document {
      //索引库名次，mysql中数据库的概念
        String indexName();
      //文档类型，mysql中表的概念
        String type() default "";
      //默认分片数
        short shards() default 5;
      //默认副本数量
        short replicas() default 1;
    }

    1.2：@Id
    //表示是文档的id，文档可以认为是mysql中表行的概念
    public @interface Id {
    }

    1.3：@Field
    public @interface Field {
      //文档中字段的类型
        FieldType type() default FieldType.Auto;
      //是否建立倒排索引
        boolean index() default true;
      //是否进行存储
        boolean store() default false;
      //分词器名次
        String analyzer() default "";
    }
    //为文档自动指定元数据类型
    public enum FieldType {
        Text,//会进行分词并建了索引的字符类型
        Integer,
        Long,
        Date,
        Float,
        Double,
        Boolean,
        Object,
        Auto,//自动判断字段类型
        Nested,//嵌套对象类型
        Ip,
        Attachment,
        Keyword//不会进行分词建立索引的类型
    }


Sping Data方式的数据操作：继承ElasticsearchRespository
可以使用衍生查询:
    在接口中直接指定查询方法名称便可查询，无需进行实现，如商品表中有商品名称、标题和关键字，
    直接定义以下查询，就可以对这三个字段进行全文搜索。
    例子：
    /**
         * 搜索查询
         *
         * @param name              商品名称
         * @param subTitle          商品标题
         * @param keywords          商品关键字
         * @param page              分页信息
         * @return
         */
        Page<EsProduct> findByNameOrSubTitleOrKeywords(String name, String subTitle, String keywords, Pageable page);
        使用@Query注解可以用Elasticsearch的DSL语句进行查询







